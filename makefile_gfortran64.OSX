# makefile for CQL3D using gfortran on OSX with brew install gcc pgplot

SHELL     = /bin/sh
NAME      = xcql3d_gfortran64
COMPILER  = gfortran
BUILDER   = $(COMPILER)
LIBTOOL   = libtool -static

# INCLUDE line
include include_dependency.mk
# Check if inlude files have changed i guess
$(SOURCES):        $(INCLUDES)

# SOURCE line
include source_dependency.mk

OBJECTS = $(SOURCES:.f90=.o)

LOCATION  =   -L /usr/lib -L/usr/local/lib
LIBRARIES =   -lnetcdff -lnetcdf -lpgplot
INCLUDE   =   -I/usr/local/include

DEBUG     = -g -fbacktrace
#common gfortran dbg flags
#-g -Wall -Wextra -Warray-temporaries -Wconversion -fimplicit-none -fbacktrace -ffree-line-length-0 -fcheck=all -ffpe-trap=zero,overflow,underflow -finit-real=nan
OPTIMIZE  = -O1
CSPECIAL  =
#force double prec -fdefault-real-8  -fdefault-double-8
LDSPECIAL =
COMPILE   = $(COMPILER) -c $(DEBUG) $(CSPECIAL)  $(OPTIMIZE) $(INCLUDE)
LOAD      = $(BUILDER) -o $(NAME) $(LDSPECIAL) $(DEBUG)
PROTECT   = chmod 755
DELETE    = rm -f

standalone: $(NAME)
libs: $(NAME)_shared lib$(NAME).a
all: standalone libs

$(NAME):           $(OBJECTS)
	$(LOAD)    $^  $(LOCATION) $(LIBRARIES)
	$(PROTECT) $(NAME)

# For the libraries, we do not want a main
LIBOBJS = $(filter-out a_cqlp.o, $(OBJECTS))
lib$(NAME).so: $(LIBOBJS)
	$(BUILDER) -shared -o $@ $(LDSPECIAL) $(DEBUG) $^ $(LOCATION) $(LIBRARIES)
	$(PROTECT) $@

lib$(NAME).a: $(LIBOBJS)
	$(LIBTOOL) -o $@ $^
	$(PROTECT) $@

$(NAME)_shared: $(NAME) lib$(NAME).so a_cqlp.o
	$(BUILDER) -o $@ $(LDSPECIAL) $(DEBUG)	a_cqlp.o -L. -l$< $(LOCATION) $(LIBRARIES)
	$(PROTECT) $@


# Following use of pattern matching works;
# it is based on statements in Sect. 10.7 of gmake Manual
# by Stallman and McGrath.
# However, the two rules following this seem clearer to me (BobH).
# Me too BobH, me too. ;)  (GBW).
#%.o:               %.f        $(INCLUDES)
#	$(COMPILE) $< -o $@


#------ Module generated dependencies
# Now that we have modules and scope,
#   we unfortunately do have dependencies.
# Do not fret, they're not so bad.

include module_dependency.mk

# see Sect. 4.10.1, Static Pattern Rules.
%.o: %.f90 $(INCLUDES)
	$(COMPILE) $< -o $@

rebuild:
	$(COMPILE) $(SOURCES)
	$(LOAD) $(OBJECTS) $(LOCATION) $(LIBRARIES)

clean:
	$(DELETE)  $(NAME) $(OBJECTS)
	$(DELETE) *.mod
	$(DELETE) *.so *.a

.PHONY: all
.PHONY: clean
.PHONY: libs
.PHONY: rebuild
.PHONY: standalone
