# makefile for CQL3D using gfortran on OSX with brew install gcc pgplot

SHELL     = /bin/sh
NAME      = xcql3d_gfortran64
COMPILER=	gfortran
BUILDER=	$(COMPILER)
INCLUDES  = frcomm.h frname.h frname_decl.h name.h name.h90 trans.h wpadvnc.h
SOURCES  =   param.f90 comm.f90 r8subs.f90 advnce.f90 pltmain.f90 \
	pltdf.f90 eqrhopsi.f90 equilib.f90 \
	impavnc0.f90  frplteq.f90 tdeqdsk.f90  \
	bsl.f90  bsu.f90 \
	a_cqlp.f90  abchief.f90  achief1.f90  achiefn.f90  aclear.f90 ainalloc.f90  \
	aindflt.f90  aindflt1.f90 aindfpa.f90  aingeom.f90  ainitial.f90   \
	ainpla.f90  ainplt.f90  ainpltpa.f90   \
	ainsetpa.f90  ainsetva.f90  ainspec.f90  ainvnorm.f90 ampfar.f90 \
	aminmx.f90 bavdens.f90  bavgmax.f90  baviorbt.f90   \
	bcast.f90 cfpcoefc.f90  cfpcoefn.f90  \
	cfpcoefr.f90  cfpgamma.f90  cfpleg.f90     \
	cfpmodbe.f90  cfpsymt.f90  coefefad.f90  coefefld.f90  coefegad.f90  \
	coeffpad.f90  coefload.f90  coefmidt.f90  coefmidv.f90   \
	coefrfad.f90  coefstup.f90  coefsyad.f90  coefwti.f90  \
	coefwtj.f90  diag.f90  diagcfac.f90   \
	diagdens.f90  diagdenz.f90  diagentr.f90  diagescl.f90  diaggnde.f90  \
	diaggnde2.f90  diagimpd.f90  diagscal.f90  diagwrng.f90  diagxswt.f90   \
	diagxswx.f90  dsk_gr.f90 dskout.f90  efield.f90  eflditer.f90 eqalloc.f90   \
	eqcoord.f90  eqelpse.f90  eqflxavg.f90  eqfn.f90  \
	eqfndpsi.f90  eqfninv.f90  eqfpsi.f90   \
	eqindflt.f90  eqinitl.f90  eqjac.f90  eqonovrp.f90  \
	eqorbit.f90  eqrhs.f90   \
	eqtopeol.f90  eqvolpsi.f90  eqwrng.f90  \
	esefld.f90  exlin.f90  exsweep.f90  exsweept.f90   \
	exsweepx.f90  finit.f90  firstdrv.f90  fle.f90 flxfn.f90  \
	freya.f  freyasou.f  frhexdrv.f   \
	frinitl.f  frinitz.f  frnbdep2.f  frnfreya.f  \
	frset.f frsmooth.f  frsplft.f   \
	frstup.f  frsubs.f  frsuppor.f  frwrong.f  \
	ilut.f90  impchk.f90  impnorm.f90  it3dalloc.f90  \
	lookup.f90  losscone.f90  lossegy.f90  lossorbm.f90  \
	losstor.f90  micgetr.f90   \
	micgmbnd.f90  micgnbnd.f90  micxinil.f90  micxinim.f90  micxinit.f90  \
	micxiniz.f90  netcdfrf.f90  netcdfrw2.f90 ntdstore.f90   \
	ntloop.f90  pack21.f90 pltcont.f90  pltcycl.f90 \
	pltdnz.f90  pltelec.f90  pltendn.f90   \
	pltends.f90  pltfluxs.f90 pltfofvv.f90 pltfvsv.f90  pltinit.f90  pltlosc.f90  \
	pltpower.f90  pltprppr.f90   \
	pltrstv.f90  pltrun.f90 pltstrml.f90  pltvec.f90  pltvectr.f90  \
	pltvflux.f90  profaxis.f90  profiles.f90 prppr.f90   \
	prpprctr.f90  psif.f90  psifp.f90  psifppy.f90  psifpy.f90  psiinv.f90  \
	r8lsode.f90  rdc_multi.f90 rdc_bplt.f90 restcon.f90 resthks.f90  \
	restvty.f90  rf.f90  sigalloc.f90  siggy.f90  sigmax.f90  sigsetup.f90  \
	sigv5d.f90 sigfn.f90 sigie.f90  sigmaxwl.f90   sigv.f90  \
	soucrit.f90 sounorm.f90  soup.f90  soup0.f90  souplt.f90   \
	sourc0.f90  sourcee.f90  sourcef.f90  sourceko.f90 sourcpwr.f90   \
	synchrad.f90  tdbootst.f90 tdboothi.f90  tdchief.f90  tddiag.f90  \
	tddsig.f90  tdfinterp.f90  tdinitl.f90  tdinlegw.f90  \
	tdinterp.f90  tdnflxs.f90  tdnpa.f90  tdnpadiag.f90  tdnpa0.f90  \
	tdnpacxcs.f90  tdnpalam.f90  tdnpabscs.f90  tdoutput.f90   \
	tdplteq.f90  tdpltjop.f90  tdpltmne.f90  tdpro.f90  \
	tdreadf.f90  tdrmshst.f90  tdsetnpa.f90  tdsetsxr.f90   \
	tdstin.f90  tdsxr.f90  tdsxr0.f90  tdsxray.f90  tdsxrplt.f90  \
	tdtloop.f90  tdtoarad.f90   tdtranspn.f90  \
	tdtoaray.f90  tdtraloc.f90  tdtransp.f90  tdtravct.f\
	tdtrchk.f90  tdtrchkd.f90  tdtrcon.f90   \
	tdtrdfus.f90  tdtrfcop.f90  tdtrflg.f90  tdtrflx.f90  \
	tdtrmuy.f90  tdtrrsou.f90  tdtrrtov.f90   \
	tdtrrtov2.f90  tdtrsavf.f90  tdtrsym.f90  tdtrvint.f90  \
	tdtrvsou.f90  tdtrvtor.f90  tdtrvtor2.f90   \
	tdtrvtor3.f90  tdtrwtl.f90  tdtry.f90  tdtscinp.f90  tdtscout.f90  \
	tdwrng.f90  tdwritef.f90  tdxin13d.f90   \
	tdxin23d.f90  tdxin33d.f90  tdxinitl.f90  urfalloc.f90  \
	urfavg.f90  urfb0.f90  urfbes.f90   \
	urfbplt.f90  urfchief.f90  urfdamp0.f90  urfdamp1.f90  \
	urfdamp2.f90  urfdampa.f90 urfdout.f90  urfedge.f90   \
	urffflx.f90  urfindfl.f90  urfinitl.f90  urfmidv.f90  \
	urfpack.f90  urfpackm.f90  urfrays.f90  urfread.f90   \
	urfread_.f90  urfsetup.f90  urfwrite.f90  urfwrite_.f90  \
	urfwrong.f90  urfwr0.f90  urfwr0c.f90 \
	vlf.f90 vlfalloc.f90 vlfbplt.f90 vlfsetup.f90 vlh.f90  vlhbplt.f90 vlhd.f90  \
	wpalloc.f90  wparsou.f90  wpavg.f90  wpbdry.f90  \
	wpcheck.f90  wpchgdy.f90 wpcthta.f90  wpelecf.f90   \
	wpinitl.f90  wploweq.f90  wpsavf.f90  wptrafx.f90  wptramu.f90  \
	wptrmuy.f90  wpvptb.f90  wpwrng.f90  wpmshchk.f90 \
	zblock.f90  zcunix.f90  zfreya.f   znonsym.f90

F90OBJECTS = $(filter %.o,$(SOURCES:.f90=.o))
OBJECTS = $(filter %.o,$(SOURCES:.f=.o))

LOCATION  =   -L /usr/lib -L/usr/local/lib  
LIBRARIES =   -lnetcdff -lnetcdf -lpgplot
INCLUDE   =/usr/local/include

DEBUG     = -g 
OPTIMIZE  = -O1
CSPECIAL  = -fdefault-real-8  -fdefault-double-8
LDSPECIAL =
COMPILE   =  $(COMPILER) -c $(DEBUG) $(CSPECIAL)  $(OPTIMIZE) -I $(INCLUDE) 
LOAD      = $(BUILDER) -o $(NAME) $(LDSPECIAL) $(DEBUG) # Remove -m for optimize
PROTECT   = chmod 755
DELETE    = rm -f

# The following gives suffixes to be used in checking for suffix rules.
# Written without dependencies, it may be useful to turn of such checking?
.SUFFIXES:

$(NAME):           $(F90OBJECTS) $(OBJECTS) 
	$(LOAD)    $(F90OBJECTS) $(OBJECTS)  $(LOCATION) $(LIBRARIES)
	$(PROTECT) $(NAME)

# Check if inlude files have changed i guess
$(SOURCES):        $(INCLUDES)


# Following use of pattern matching works; 
# it is based on statements in Sect. 10.7 of gmake Manual
# by Stallman and McGrath.
# However, the two rules following this seem clearer to me (BobH).
# Me too BobH, me too. ;)  (GBW).
#%.o:               %.f90        $(INCLUDES)
#	$(COMPILE) $< -o $@


#----
# Now that we have modules and scope,
#   we unfortunately do have dependencies.
# Do not fret, they're not so bad.
DAGOBJS = param.o comm.o r8subs.o advnce.o pltmain.o \
          pltdf.o eqrhopsi.o equilib.o \
          impavnc0.o  frplteq.o tdeqdsk.o bsl.o bsu.o \
          a_cqlp.f90   achief1.f90  aclear.f90   ainalloc.f90 \
          aindflt1.f90 aingeom.f90  ainpla.f90   ainpltpa.f90 \
          ainsetva.f90 ainvnorm.f90 ampfar.f90 abchief.f90  \
          achiefn.f90  advnce.f90   aindflt.f90  aindfpa.f90 \
          ainitial.f90 ainplt.f90   ainsetpa.f90 ainspec.f90  \
          aminmx.f90
# And this describes their dag...
comm.o: comm.f90 param.o
r8subs.o: r8subs.f90 comm.o
bsl.o: bsl.f90 param.o comm.o
bsu.o: bsu.f90 param.o comm.o
advnce.o: advnce.f90 comm.o r8subs.o bsu.o bsl.o
pltdf.o: pltdf.f90 param.o comm.o r8subs.o
pltmain.o: pltmain.f90 param.o comm.o pltdf.o
eqrhopsi.o: eqrhopsi.f90 param.o comm.o aminmx.o
equilib.o: equilib.f90 param.o comm.o r8subs.o
impavnc0.o: impavnc0.f90 param.o comm.o advnce.o r8subs.o bsu.o bsl.o
frplteq.o: frplteq.f90 param.o comm.o r8subs.o
tdeqdsk.o: tdeqdsk.f90 param.o comm.o equilib.o r8subs.o

# a is for awful
a_cqlp.o : a_cqlp.f90 abchief.o
abchief.o: abchief.f90 param.o comm.o
achief1.o: achief1.f90 param.o comm.o pltmain.o aingeom.o
achiefn.o: achiefn.f90 param.o comm.o impavnc0.o pltmain.o
aclear.o: aclear.f90 param.o comm.o
ainalloc.o: ainalloc.f90 param.o comm.o
aindflt.o: aindflt.f90 param.o comm.o
aindflt1.o: aindflt1.f90 param.o comm.o
aindfpa.o: aindfpa.f90 param.o comm.o 
aingeom.o: aingeom.f90 equilib.o param.o comm.o
ainitial.o: ainitial.f90 param.o comm.o pltmain.o
ainpla.o: ainpla.f90 param.o comm.o
ainplt.o: ainplt.f90 param.o comm.o
ainpltpa.o: ainpltpa.f90 param.o comm.o
ainsetpa.o: ainsetpa.f90 param.o comm.o
ainsetva.o: ainsetva.f90 param.o comm.o
ainspec.o: ainspec.f90 param.o comm.o
ainvnorm.o: ainvnorm.f90 param.o comm.o
ampfar.o: ampfar.f90 param.o comm.o r8subs.o


#----
# From here we will assume that all deps to build
# remaining files have been met.
# (Other words, we assume remaining .f90 files 
#  require all DAGOBJS.
# That is overkill, but simple.
# As files migrate or evolve, we add small rules for each file.
# This will also document how the code is structured in practice.

#GBW, until all files have the same extension (90 I hope!)
# filter out objects with correct extension

# see Sect. 4.10.1, Static Pattern Rules.
$(filter %.o,$(F90OBJECTS)): %.o: %.f90 $(INCLUDES)
	$(COMPILE) $< -o $@ 

$(filter %.o,$(OBJECTS)): %.o: %.f$(DAGOBJS) $(INCLUDES)
	$(COMPILE) $< -o $@

rebuild:
	$(COMPILE) $(SOURCES) $(F90SOURCES)
	$(LOAD) $(OBJECTS) $(F90OBJECTS) $(LOCATION) $(LIBRARIES)

clean:
	$(DELETE)  $(NAME) $(OBJECTS) $(F90OBJECTS) *.lst$(DELETE)
	$(DELETE) *.mod

